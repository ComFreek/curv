name: Build Binaries and Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  windows-build: 
    runs-on: windows-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: recursive
      
    - uses: msys2/setup-msys2@v1
      with:
        msystem: MINGW64
        update: true
        cache: true
        install: "git diffutils mingw-w64-x86_64-clang make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-mesa mingw-w64-x86_64-openexr mingw-w64-x86_64-intel-tbb mingw-w64-x86_64-glm mingw-w64-x86_64-glew mingw-w64-x86_64-dbus patch mingw-w64-x86_64-openvdb"

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: msys2 -c 'cmake -P {0}'
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: .ccache
        key: ${ { matrix.config.name } }-ccache-${ { steps.ccache_cache_timestamp.outputs.timestamp } }
        restore-keys: |
          ${ { matrix.config.name } }-ccache-
      
    - name: Build Curv
      shell: msys2 {0}
      run: make
    - name: Test built executable
      shell: msys2 {0}
      run: ./release/curv --version
      
    - name: Copy runtime dependencies to build dir
      shell: msys2 {0}
      run: |
        cp libHalf*.dll ./release
        cp tbb.dll ./release
        cp libopenvdb.dll ./release
        cp libboost_filesystem-mt.dll ./release
    - uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: windows-binaries-${{ github.sha }}
        path: |
          release/*.exe
          release/*.dll
          

    
